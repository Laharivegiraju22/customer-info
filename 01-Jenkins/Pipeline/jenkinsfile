node {
 stage('Git-Checkout') {
  
   git 'https://github.com/Laharivegiraju22/customer-info.git'
  }
    
 def project_path="01-Jenkins/Code/petclinic"
 
 dir(project_path) {
    
  stage('Maven-Clean') {
  
   sh label: '', script: 'mvn clean'
  }
    
 stage('Maven-Compile') {

   sh label: '', script: 'mvn compile'
  }
  
   stage('Maven-Test') {
   
   sh label: '', script: 'mvn test'
  }
 stage('Sonar Analysis'){

	withSonarQubeEnv('SonarQube'){
	sh 'mvn sonar:sonar'
	}
}

stage("Quality Gate"){
          timeout(time: 1, unit: 'MINUTES') {
              def qg = waitForQualityGate()
              if (qg.status != 'OK') {
                  error "Pipeline aborted due to quality gate failure: ${qg.status}"
              }
          }
      }     
   stage('Maven-Package') {
  
   sh label: '', script: 'mvn package'
  }
     
     stage('Jfrog Artifacory Upload') {

	def server= Artifactory.server 'Artifactory'
	def uploadSpec= """{
	"files": [{
	"pattern": "/root/.jenkins/workspace/customer-info-master/01-Jenkins/Code/petclinic/target/*.war",
		"target": "petclinic"}]
	}"""
server.upload(uploadSpec)
}
stage('Docker-Stage-Deployment') {
   
   sh label: '', script: 'docker-compose up -d --build'
  }
}
stage('Pushing DockerImage to DockerHub') {
docker.withRegistry('', 'docker-hyndu' ) {
sh label: '', script: 'docker push hyndavi123/petclinic:$BUILD_NUMBER'
}
}
}

